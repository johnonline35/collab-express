"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.incomingOpSchema = exports.StepOpCode = exports.failureEventErrorSchema = void 0;
const zod_1 = require("zod");
exports.failureEventErrorSchema = zod_1.z.object({
    name: zod_1.z.string(),
    message: zod_1.z.string(),
    stack: zod_1.z.string().optional(),
    cause: zod_1.z.string().optional(),
    status: zod_1.z.number().optional(),
});
/**
 * Unique codes for the different types of operation that can be sent to Inngest
 * from SDK step functions.
 */
var StepOpCode;
(function (StepOpCode) {
    StepOpCode["WaitForEvent"] = "WaitForEvent";
    StepOpCode["RunStep"] = "Step";
    StepOpCode["StepPlanned"] = "StepPlanned";
    StepOpCode["Sleep"] = "Sleep";
})(StepOpCode = exports.StepOpCode || (exports.StepOpCode = {}));
exports.incomingOpSchema = zod_1.z.object({
    id: zod_1.z.string().min(1),
    data: zod_1.z.any().optional(),
    error: zod_1.z.any().optional(),
});
//# sourceMappingURL=types.js.map